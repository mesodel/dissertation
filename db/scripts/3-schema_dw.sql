CONN prod_dw/pass@XEPDB1;

create table address (id number(19,0) generated by default as identity, city varchar2(255 char), country varchar2(255 char), primary key (id));
create table home (id number(19,0) generated by default as identity, home_name varchar2(255 char), room_name varchar2(255 char), primary key (id));
create table record (id number(19,0) generated by default as identity, record_date timestamp, value double precision not null, address_id number(19,0), home_id number(19,0), sensor_id number(19,0), reading_id number(19,0), primary key (id));
create table sensor (id number(19,0) generated by default as identity, description varchar2(255 char), gateway_friendly_name varchar2(255 char), machine_id varchar2(255 char), name varchar2(255 char), gateway_type number(10,0), primary key (id));
create table time (reading_id number(19,0) generated by default as identity, day varchar2(255 char), full_date timestamp, month varchar2(255 char), quarter varchar2(255 char), year varchar2(255 char), primary key (reading_id));
alter table record add constraint FKctuyjh5p4tl9u5gwcy9fro20s foreign key (address_id) references address;
alter table record add constraint FKth3c33iuybx8hl1liinqb2xbg foreign key (home_id) references home;
alter table record add constraint FK6u79h06y3wcw5w05ywmtfxsdm foreign key (sensor_id) references sensor;
alter table record add constraint FKruxw086e4e44arfxhr1aro5yw foreign key (reading_id) references time;

CREATE OR REPLACE PROCEDURE MIGRATE_DATA
IS BEGIN

insert into address(id, city, country)
select a.id, a.name, b.name
from PROD.city a
inner join PROD.country b on b.id = a.country_id
where a.id not in (select id from address);

insert into home(home_name, room_name)
select h.name, r.name
from PROD.home h
inner join PROD.room r on h.id = r.home_id
where h.name not in (select home_name from home)
and r.name not in (select room_name from home);

insert into sensor(id, name, description, machine_id, gateway_friendly_name, gateway_type)
select s.id, s.name, s.description, g.paired_to, g.friendly_name, g.type
from PROD.sensor s
inner join PROD.IOT_GATEWAY g on g.machine_id = s.gateway_id
where s.id not in (select id from sensor);

insert into record(record_date, value, address_id, home_id, sensor_id)
select r.record_date, r.value, address.id, home.id, sensor.id
from PROD.record r
inner join PROD.sensor s on s.id = r.sensor_id
inner join PROD.room r on r.id = s.room_id
inner join PROD.home h on h.id = r.home_id
inner join PROD.city c on c.id = h.city_id
inner join PROD.country country on country.id = c.country_id
inner join PROD_DW.address address on address.city = c.name and address.country = country.name
inner join PROD_DW.home home on home.home_name = h.name and home.room_name = r.name
inner join PROD_DW.sensor sensor on sensor.id = s.id;

END MIGRATE_DATA;
/

CREATE OR REPLACE PROCEDURE INSERT_TIME
    IS
    startDate DATE := to_date('01/01/2021', 'dd/mm/yyyy');
    endDate DATE := to_date('31/12/2023', 'dd/mm/yyyy');
    iteratie int;
    startd NUMBER;
    endd NUMBER;
    day_insert varchar2(10);
    month_insert varchar2(10);
    quarter_insert varchar2(10);
    year_insert varchar2(250);
    fulldate_insert DATE;
BEGIN
    startd := to_number(to_char(startDate, 'j'));
    endd := to_number(to_char(endDate, 'j'));

    iteratie := 0;


    FOR iter IN startd..endd LOOP
            fulldate_insert := startDate + iteratie;

            SELECT TO_CHAR(fulldate_insert, 'MONTH') INTO month_insert FROM DUAL;
            SELECT TO_CHAR(fulldate_insert, 'YEAR') INTO year_insert FROM DUAL;
            SELECT TO_CHAR(fulldate_insert, 'Q') INTO quarter_insert FROM DUAL;
            SELECT TO_CHAR(fulldate_insert, 'DD') INTO day_insert FROM DUAL;

            INSERT INTO time (quarter, year, month, day, full_date) VALUES (quarter_insert, year_insert, month_insert, day_insert, fulldate_insert);
            iteratie := iteratie + 1;
        END LOOP;

END INSERT_TIME;
/

CREATE OR REPLACE PROCEDURE insert_records
    IS
    timeDate NUMBER;
BEGIN
    for i in (
        select r.id rec_id, r.value val, r.record_date fdate, c.id city_id, s.id sensor_id, h.id home_id
        from PROD.record r
                 inner join PROD.sensor s on s.id = r.sensor_id
                 inner join PROD.room room on room.id = s.room_id
                 inner join PROD.home h on h.id = room.home_id
                 inner join PROD.city c on c.id = h.city_id
        )
        loop
            select read_id into timeDate from (
                                                  select reading_id read_id
                                                  from time
                                                  where full_date = i.fdate
                                                    and rownum < 2);
            insert into record(id, value, record_date, address_id, sensor_id, home_id, reading_id) values
                (i.rec_id, i.val, i.fdate, i.city_id, i.sensor_id, i.home_id, timeDate);
        end loop;
end insert_records;
/

